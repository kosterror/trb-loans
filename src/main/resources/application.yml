server:
  port: 8080
spring:
  application:
    name: trb-loans
  datasource:
    url: jdbc:postgresql://trb-loans-db:5432/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  flyway:
    locations: migrations
  kafka:
    bootstrap-servers: ${KAFKA_SERVERS}
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      retries: 3
    consumer:
      client-id: ${spring.application.name}
      group-id: ${spring.application.name}
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

kafka:
  topic:
    consumer:
      loan-payment-callback: "transaction.loan.payment-callback"
      loan-repayment-callback: "transaction.loan.repayment-callback"
    producer:
      transaction-initialization: "transaction.initialization"
urls:
  core: ${CORE_URL}
  users: ${USERS_URL}

scheduler:
  loan-repayment-send-transaction: ${REPAYMENT_TRANSACTION_CRON:0 0 18 * * *}
  loan-repayment-update-status: ${REPAYMENT_UPDATE_STATUS_CRON:0 0 */6 * * *}
  loan-repayment-calculate-penny: ${REPAYMENT_CALCULATE_PENNY_CRON:0 0 1 * * *}
  loan-state-update: ${LOAN_STATE_UPDATE_CRON:0 0 */1 * * *}

random-error:
  is-enable: ${RANDOM_ERROR_IS_ENABLE:true}
  probability-average: 0.5
  probability-extreme: 0.9
  extreme-period-duration-min: 1
  extreme-period-frequency-min: 2

management:
  endpoints:
    web:
      exposure:
        include:
          - info
          - health
          - prometheus
  metrics:
    tags:
      application: ${spring.application.name}